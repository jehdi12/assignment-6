import java.util.Random;

public int[] RandomizedArray(int size, int start, int end) {
Random rnd = new Random();
return rnd.ints(size, start, end).toArray();
}

public void bubbleSort(int arr[]) {
int n = arr.length;
for (int i = 0; i < n-1; i++) 
for (int j = 0; j < n-i-1; j++) 
if (arr[j] > arr[j+1]) {
int temp = arr[j];
arr[j] = arr[j+1];
arr[j+1] = temp;
}
}

public void selectionSort(int arr[]) {
int n = arr.length;
for (int i = 0; i < n-1; i++) {
int min_idx = i;
for (int j = i+1; j < n; j++)
if (arr[j] < arr[min_idx])
min_idx = j;
int temp = arr[min_idx];
arr[min_idx] = arr[i];
arr[i] = temp;
}
}
int[] arrayToSort = RandomizedArray(1000000, 0, 100);

int[] bubbleArray = Arrays.copyOf(arrayToSort, arrayToSort.length);
long startBubble = System.currentTimeMillis();
bubbleSort(bubbleArray);
long finishBubble = System.currentTimeMillis();
long timeElapsedBubble = finishBubble - startBubble;
System.out.println("Sorting a random array size of " + bubbleArray.length + " took Bubble Sort " + timeElapsedBubble + "ms to complete.");

int[] selectionArray = Arrays.copyOf(arrayToSort, arrayToSort.length);
long startSelection = System.currentTimeMillis();
selectionSort(selectionArray);
long finishSelection = System.currentTimeMillis();
long timeElapsedSelection = finishSelection - startSelection;
System.out.println("Sorting a random array size of " + selectionArray.length + " took Selection Sort " + timeElapsedSelection + "ms to complete.");
